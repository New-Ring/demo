server:
  port: 8082
#  servlet:
#    context-path: /demo

spring:
  profiles:
    active: dev
  aop:
    auto: true #启动aop配置
  redis:
    host: 217.0.0.1
    port: 6379
    timeout: 1000  # 连接超时时间（毫秒）
    pool:
      max-active: 8   # 连接池最大连接数（使用负值表示没有限制）
      max-wait: -1    # 连接池最大阻塞等待时间（使用负值表示没有限制）,单位毫秒
      max-idle: 8     # 连接池中的最大空闲连接
      min-idle: 1     # 连接池中的最小空闲连接
      min-evictableIdleTimeMillis: 1800000  # 连接池中逐出连接的最小空闲时间 默认1800000毫秒(30分钟)
  kafka:
    # 指定kafka server的地址，集群配多个，中间，逗号隔开
    bootstrap-servers: 127.0.0.1:9092
    # 生产者
    producer:
      # 写入失败时，重试次数。当leader节点失效，一个repli节点会替代成为leader节点，此时可能出现写入失败，
      # 当retris为0时，produce不会重复。retirs重发，此时repli节点完全成为leader节点，不会产生消息丢失。
      retries: 0
      # 每次批量发送消息的数量,produce积累到一定数据，一次发送
      batch-size: 16384
      # produce积累数据一次发送，缓存大小达到buffer.memory就发送数据
      buffer-memory: 33554432
      # 指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger.ms: 1
    # 消费者
    consumer:
      enable-auto-commit: false
      auto-commit-interval: 100ms
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        session.timeout.ms: 15000
      group-id: group

logging:
  config: classpath:logback-spring.xml
  level:
    dao: debug
    org:
      mybatis: debug

---
person:
  name: 张三${random.uuid}
  age: ${random.int}
  tellPhone: ${person.age}
  sex: true
  map: {key:value}
  birth: 1993/10/28
  list:
    - ${person.age}
    - 2
    - 3


